// Projekt: Repairpoint24 CRM (intern)
// Setup: React + Node.js + Express + MongoDB

// Verzeichnisstruktur:
// /client  -> React Frontend
// /server  -> Express Backend

// ==== 1. Backend-Grundgerüst (Express) ====
// Datei: /server/index.js
const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
require("dotenv").config();

const app = express();
app.use(cors());
app.use(express.json());

const PORT = process.env.PORT || 5000;

mongoose.connect(process.env.MONGO_URI, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => console.log("MongoDB connected"))
  .catch(err => console.error(err));

app.get("/", (req, res) => {
  res.send("Repairpoint24 CRM Backend läuft.");
});

// Server starten
app.listen(PORT, () => {
  console.log(`Server läuft auf Port ${PORT}`);
});

// ==== 2. Kundenmodell (MongoDB/Mongoose) ====
// Datei: /server/models/Customer.js
const mongoose = require("mongoose");

const customerSchema = new mongoose.Schema({
  name: String,
  company: String,
  email: String,
  phone: String,
  address: String,
  notes: String,
  createdAt: {
    type: Date,
    default: Date.now,
  },
});

module.exports = mongoose.model("Customer", customerSchema);

// ==== 3. Start-Frontend (React) ====
// Datei: /client/src/App.js
import React from "react";

function App() {
  return (
    <div className="p-4">
      <h1 className="text-2xl font-bold">Repairpoint24 CRM</h1>
      <p>Dashboard – Übersicht über deine Kundenkontakte.</p>
    </div>
  );
}

export default App;

// ==== 4. .env Beispiel (im /server Ordner, nicht hochladen) ====
// MONGO_URI=mongodb+srv://<user>:<pass>@cluster.mongodb.net/repairpoint24_crm
